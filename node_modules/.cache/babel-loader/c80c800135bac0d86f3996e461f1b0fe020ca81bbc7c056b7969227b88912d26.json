{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  itemsInCart: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.itemsInCart = action.payload.itemsInCart;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const isExistingInItemsArray = state.itemsInCart.find(item => item.id === newItem.id);\n      state.totalQuantity += 1;\n      if (!isExistingInItemsArray) {\n        state.itemsInCart.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n        console.log(newItem);\n      } else {\n        isExistingInItemsArray.quantity += 1;\n        isExistingInItemsArray.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      state.totalQuantity -= 1;\n      const id = action.payload;\n      const existingInItemsArray = state.itemsInCart.find(item => item.id === id);\n      if (existingInItemsArray === 1) {\n        state.itemsInCart = state.itemsInCart.filter(item => item.id !== id);\n      } else {\n        existingInItemsArray.quantity -= 1;\n        existingInItemsArray.totalPrice = existingInItemsArray.totalPrice - existingInItemsArray.price;\n      }\n    }\n  }\n});\nexport const CartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialState","itemsInCart","totalQuantity","cartSlice","name","reducers","replaceCart","state","action","payload","addItemToCart","newItem","isExistingInItemsArray","find","item","id","push","price","quantity","totalPrice","title","console","log","removeItemFromCart","existingInItemsArray","filter","CartActions","actions"],"sources":["C:/Web/2023/redux-cart/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    itemsInCart: [],\r\n    totalQuantity: 0\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState,\r\n    reducers:{\r\n        replaceCart(state,action){\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.itemsInCart = action.payload.itemsInCart;\r\n        },\r\n        addItemToCart(state,action){\r\n            const newItem = action.payload;\r\n            const isExistingInItemsArray= state.itemsInCart.find((item)=>item.id === newItem.id);\r\n            state.totalQuantity+=1;\r\n            if(!isExistingInItemsArray){\r\n                state.itemsInCart.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity:1,\r\n                    totalPrice: newItem.price,\r\n                    title:newItem.title\r\n                });\r\n\r\n                console.log(newItem)\r\n            }else{\r\n                isExistingInItemsArray.quantity+=1;\r\n                isExistingInItemsArray.totalPrice+=newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state,action){\r\n            state.totalQuantity-=1;\r\n            const id = action.payload;\r\n            const existingInItemsArray= state.itemsInCart.find((item)=>item.id === id);\r\n            if(existingInItemsArray === 1){\r\n                state.itemsInCart = state.itemsInCart.filter(item => item.id !== id);\r\n            }else{\r\n                existingInItemsArray.quantity-=1;\r\n                existingInItemsArray.totalPrice = existingInItemsArray.totalPrice - existingInItemsArray.price;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const CartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAC,MAAM;EACXJ,YAAY;EACZK,QAAQ,EAAC;IACLC,WAAW,CAACC,KAAK,EAACC,MAAM,EAAC;MACrBD,KAAK,CAACL,aAAa,GAAGM,MAAM,CAACC,OAAO,CAACP,aAAa;MAClDK,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO,CAACR,WAAW;IAClD,CAAC;IACDS,aAAa,CAACH,KAAK,EAACC,MAAM,EAAC;MACvB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,sBAAsB,GAAEL,KAAK,CAACN,WAAW,CAACY,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACpFR,KAAK,CAACL,aAAa,IAAE,CAAC;MACtB,IAAG,CAACU,sBAAsB,EAAC;QACvBL,KAAK,CAACN,WAAW,CAACe,IAAI,CAAC;UACnBD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAC,CAAC;UACVC,UAAU,EAAER,OAAO,CAACM,KAAK;UACzBG,KAAK,EAACT,OAAO,CAACS;QAClB,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAACX,OAAO,CAAC;MACxB,CAAC,MAAI;QACDC,sBAAsB,CAACM,QAAQ,IAAE,CAAC;QAClCN,sBAAsB,CAACO,UAAU,IAAER,OAAO,CAACM,KAAK;MACpD;IACJ,CAAC;IACDM,kBAAkB,CAAChB,KAAK,EAACC,MAAM,EAAC;MAC5BD,KAAK,CAACL,aAAa,IAAE,CAAC;MACtB,MAAMa,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMe,oBAAoB,GAAEjB,KAAK,CAACN,WAAW,CAACY,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1E,IAAGS,oBAAoB,KAAK,CAAC,EAAC;QAC1BjB,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACN,WAAW,CAACwB,MAAM,CAACX,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MACxE,CAAC,MAAI;QACDS,oBAAoB,CAACN,QAAQ,IAAE,CAAC;QAChCM,oBAAoB,CAACL,UAAU,GAAGK,oBAAoB,CAACL,UAAU,GAAGK,oBAAoB,CAACP,KAAK;MAClG;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMS,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AAE5C,eAAexB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}